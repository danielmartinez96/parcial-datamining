---
title: "Analisis exploratorio de dataSet 'House-Pricing'"

fig:height: 4
output:
  html_notebook:
    df_print: paged
    fig:height: 4
    fig:width: 6
    theme: readable
    toc: yes
    toc_float: yes
    
author: "Alvarez Ignacio Nicolas-Martinez Daniel Martinez"
---

# Carga de Librerias
```{r Librerías}
library("dplyr")
library("corrplot")
library("fastDummies")
library("ggplot2")
library("rpart")
library("rpart.plot")
library("caret")
library("caTools")
library("randomForest")
library("class")
library("lubridate")
library("e1071")
```

# Establecimiento del entorno de trabajo
```{r}
#setwd("~/R-WORKSPACE/Parcial2/parcial-datamining/")
```

# Cargar del DataSet
```{r Carga del DataSet}
a_raw_data <- read.csv("house_data.csv")
```

# Analisis Exploratorio 

## DataSet
```{r}
a_raw_data
```

## Estructura del DataSet
```{r Estructura del DataSet}
str(a_raw_data)
```

## Descripcion del DataSet
```{r Descripcion del DataSet}
summary(a_raw_data)
```

<<<<<<< HEAD


## Analasis de variables



```{r echo=FALSE}
a_raw_data$date =  as.Date(a_raw_data$date, format = "%Y%m%dT000000")
```


=======
## Analasis de variables

>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1
```{r Boxplot price-bedrooms-bathroom}
par(mfrow = c(1,3))
boxplot(a_raw_data$price, main="Price")
boxplot(a_raw_data$bedrooms, main="Cant Bedrooms")
boxplot(a_raw_data$bathrooms, main="Cant Bathrooms")
```

```{r Boxplot sqft_living-sqft_living15}
par(mfrow = c(1,2))
boxplot(a_raw_data$sqft_living, main="sqft_living (ft^2)")
boxplot(a_raw_data$sqft_living15, main="sqft_living15 (ft^2)")
```

```{r Boxplot sqft_lot-sqft_lot15}
par(mfrow = c(1,2))
boxplot(a_raw_data$sqft_lot, main="sqft_lot (ft^2)")
boxplot(a_raw_data$sqft_lot15, main="sqft_lot15 (ft^2)")
```

```{r Boxplot sqft_above-sqft_basement}
par(mfrow = c(1,2))
boxplot(a_raw_data$sqft_above, main="sqft_above (ft^2)")
boxplot(a_raw_data$sqft_basement, main="sqft_basement (ft^2)")
```

```{r }
par(mfrow = c(1,3))
barplot(table(as.factor(a_raw_data$waterfront)), main="waterfront", col="blue")
barplot(table(as.factor(a_raw_data$view)), main="view",col="blue")
barplot(table(as.factor(a_raw_data$floors)), main="floors", col="blue")
<<<<<<< HEAD
=======
```


# Estudio de la variable target: Price
## Histograma
```{r}
hist(a_raw_data$price, col="blue", breaks = 60, freq = F)
lines(density(a_raw_data$price), col = "red", lwd=2)
rug(a_raw_data$price)
```

## Graficos de Dispersion: Price vs Todos
```{r Graficos de Dispersion: Price vs Todos}
plot(price~., data=a_raw_data,col="blue")
```

## Estudio de correlacion
```{r Estudio de correlacion}
df_sqft = select(a_raw_data,-c("id","date"))
corrplot(cor(df_sqft),type="upper", method="pie")
cor(df_sqft)
>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1
```


# Estudio de la variable target: Price
## Histograma
```{r}
<<<<<<< HEAD
hist(a_raw_data$price, col="blue", breaks = 60, freq = F)
lines(density(a_raw_data$price), col = "red", lwd=2)
rug(a_raw_data$price)
=======

prueba = a_raw_data

prueba$sqft_living = a_raw_data$sqft_above / a_raw_data$sqft_living
prueba$sqft_basement = a_raw_data$sqft_above / a_raw_data$sqft_basement

head(prueba)
summary(prueba)

corrplot(cor(prueba[,c("sqft_living","sqft_lot","sqft_above","sqft_living15","sqft_lot15","sqft_basement")]),method="square")

prueba= a_raw_data

prueba = mutate(prueba,sqft_living.nuevo=a_raw_data$sqft_above/a_raw_data$sqft_living)

prueba = mutate(prueba,sqft_basement.nuevo=ifelse(a_raw_data$sqft_basement>0,a_raw_data$sqft_above/a_raw_data$sqft_basement,0))

prueba = mutate(prueba,sqft_lot15.nuevo=(a_raw_data$sqft_lot-a_raw_data$sqft_lot15)/a_raw_data$sqft_lot)

prueba = mutate(prueba,sqft_living15.nuevo=(a_raw_data$sqft_living-a_raw_data$sqft_living15)/a_raw_data$sqft_living)

#prueba$sqft_living=a_raw_data$sqft_above/a_raw_data$sqft_living
#prueba$sqft_basement=a_raw_data$sqft_above/a_raw_data$sqft_basement
head(prueba)
summary(prueba)

corrplot(cor(prueba[,c("sqft_living.nuevo","sqft_lot","sqft_above","sqft_living15.nuevo","sqft_lot15.nuevo","sqft_basement.nuevo")]),method="square")

cor(prueba[,c("sqft_living.nuevo","sqft_lot","sqft_above","sqft_living15.nuevo","sqft_lot15.nuevo","sqft_basement.nuevo")])

plot(a_raw_data$sqft_living~a_raw_data$sqft_basement)

>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1
```

## Graficos de Dispersion: Price vs Todos
```{r Graficos de Dispersion: Price vs Todos}
plot(price~., data=a_raw_data,col="blue")
```
<<<<<<< HEAD
=======
```{r Outliers Price}

price_con_outliers= filter(a_raw_data,price>1010000)
price_sin_outliers= filter(a_raw_data,!price>1010000)



par(mfrow = c(1,2))
boxplot(price_con_outliers$price, main="con outliers")
boxplot(price_sin_outliers$price, main="sin outliers")
hist(price_sin_outliers$price, breaks = 100)
summary(price_sin_outliers$price)


```

```{r Antiguedad }
df_antiguedad= a_raw_data
df_antiguedad$date =  as.Date(df_antiguedad$date, format = "%Y%m%dT000000")
df_antiguedad= mutate(df_antiguedad,antiguedad=(year(date)-yr_built))

>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1

## Estudio de correlacion
```{r Estudio de correlacion}
df_sqft = select(a_raw_data,-c("id","date"))
corrplot(cor(df_sqft),type="upper", method="pie")
cor(df_sqft)
```

<<<<<<< HEAD

=======
>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1
# Analisis de variables

### DUPLICADOS

```{r}
<<<<<<< HEAD
raw_duplicadosID = a_raw_data[duplicated(a_raw_data$id), ]
dim(raw_duplicadosID)
```
=======
duplicadosID = a_raw_data[duplicated(a_raw_data$id), ]
df_sin_repetidos = a_raw_data %>% group_by(id) %>% filter(price==max(price))
>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1

```{r}
#df_sin_repetidos = a_raw_data %>% group_by(id) %>% filter(price==max(price))
```


### CONDITION & GRADE
197 casos de valores duplicados en ID, fechas con diferencia de un año y un precio que en todos los casos se ingrementó, nos quedamos con el ultimo precio mas actualizado
```{r}
summary(a_raw_data$condition)
summary(a_raw_data$grade)
```

```{r}
par(mfrow = c(1,2))
boxplot(a_raw_data$condition, main="condition")
boxplot(a_raw_data$grade, main="grade")
```
```{r}
par(mfrow = c(1,2))
<<<<<<< HEAD
barplot(table(as.factor(a_raw_data$condition)), main="condition")
barplot(table(as.factor(a_raw_data$grade)), main="grade")
=======
barplot(table(as.factor(df_sin_repetidos$condition)), main="condition")
barplot(table(as.factor(df_sin_repetidos$grade)), main="grade")
>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1
```

```{r}

<<<<<<< HEAD
df_sqft =  select(a_raw_data, c("price", "grade", "condition"))
=======
df_sqft =  select(df_sin_repetidos, price, grade, condition) %>% select(-c("id"))
>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1
corrplot(cor(df_sqft),method="square")
cor(df_sqft)

```

### DATE

La fecha presenta un formato que es necesario cambiar, se busca ver la relacion entre los distintos año/meses y el precio de las casas

```{r}
df_fecha_form = a_raw_data %>% select(price,date)  %>% mutate(date_year = paste(year(date), month(date), sep="/"))
```

```{r}
pie(table(df_fecha_form$date_year))
```

Salvo casos particulares parece que la fecha de publicacion supongo, no afecta el precio de una casa.
```{r Plot Fecha por año/mes vs Price}
plot(df_fecha_form$price ~ as.factor(df_fecha_form$date_year))
```




```{r}
prueba2 = mutate(a_raw_data,)
```

#Analisis de los datos de la renovacion para ver el rango de valores que abarca sin utilizar las que tienen cero, quiero ver si se podria discretisarlos y expresarla como factor en "No renovada", "1991","1992", etc.
```{r }
#Aca voy a relacionar el año de renovacion y de construccion para ver la correlacion
corrplot(cor(a_raw_data[,c("yr_renovated","yr_built")]),method="square")

renovacion= filter(a_raw_data,yr_renovated>0)
#observaciones 914

renovacion2= filter(a_raw_data,yr_renovated>=yr_built)
#observaciones 914
#por lo tanto los datos de yr renovacion y built tienen sentido por que las que tienen renovacion son posteriores a los de construccion


par(mfrow = c(1,3))
boxplot(renovacion$yr_renovated, main="Renovated")$stats
boxplot(renovacion$yr_built, main="Built")$stats
#Built esta bastante bien a mi parecer, luego renovacion tiene muchos outliners

renovacion= filter(renovacion,yr_renovated>1957)
#Nos quito unas observacioens insignificantes asi que podria ser factible este filtro

par(mfrow = c(1,3))

boxplot(renovacion$yr_renovated, main="Renovated Desdepues del filtro")$stats

summary(renovacion$yr_renovated)

plot(renovacion$price~renovacion$yr_renovated)
```

```{r}

prueba = a_raw_data

prueba$sqft_living = a_raw_data$sqft_above / a_raw_data$sqft_living
prueba$sqft_basement = a_raw_data$sqft_above / a_raw_data$sqft_basement

head(prueba)
summary(prueba)

corrplot(cor(prueba[,c("sqft_living","sqft_lot","sqft_above","sqft_living15","sqft_lot15","sqft_basement")]),method="square")

prueba= a_raw_data

prueba = mutate(prueba,sqft_living.nuevo=a_raw_data$sqft_above/a_raw_data$sqft_living)

prueba = mutate(prueba,sqft_basement.nuevo=ifelse(a_raw_data$sqft_basement>0,a_raw_data$sqft_above/a_raw_data$sqft_basement,0))

prueba = mutate(prueba,sqft_lot15.nuevo=(a_raw_data$sqft_lot-a_raw_data$sqft_lot15)/a_raw_data$sqft_lot)

prueba = mutate(prueba,sqft_living15.nuevo=(a_raw_data$sqft_living-a_raw_data$sqft_living15)/a_raw_data$sqft_living)

#prueba$sqft_living=a_raw_data$sqft_above/a_raw_data$sqft_living
#prueba$sqft_basement=a_raw_data$sqft_above/a_raw_data$sqft_basement
head(prueba)
summary(prueba)

corrplot(cor(prueba[,c("sqft_living.nuevo","sqft_lot","sqft_above","sqft_living15.nuevo","sqft_lot15.nuevo","sqft_basement.nuevo")]),method="square")

cor(prueba[,c("sqft_living.nuevo","sqft_lot","sqft_above","sqft_living15.nuevo","sqft_lot15.nuevo","sqft_basement.nuevo")])

plot(a_raw_data$sqft_living~a_raw_data$sqft_basement)

```

```{r }
<<<<<<< HEAD
plot(prueba$price~prueba$sqft_living.nuevo)
```
```{r Outliers Price}

price_con_outliers= filter(a_raw_data,price>1010000)
price_sin_outliers= filter(a_raw_data,!price>1010000)



par(mfrow = c(1,2))
boxplot(price_con_outliers$price, main="con outliers")
boxplot(price_sin_outliers$price, main="sin outliers")
hist(price_sin_outliers$price, breaks = 100)
summary(price_sin_outliers$price)


```

```{r Antiguedad }
df_antiguedad= a_raw_data
df_antiguedad$date =  as.Date(df_antiguedad$date, format = "%Y%m%dT000000")
df_antiguedad= mutate(df_antiguedad,antiguedad=(year(date)-yr_built))


par(mfrow = c(1,2))
boxplot(df_antiguedad$antiguedad)
summary(df_antiguedad$antiguedad)
plot(price~antiguedad,data=df_antiguedad)

cor(df_antiguedad[,c("price","antiguedad")])
```

```{r }
#a_raw_data=mutate(a_raw_data, yr_renovated.nuevo=ifelse(yr_renovated==0,"NoRenovado",ifelse(yr_renovated>1957,"renovado","quitar")))
#a_raw_data=filter(a_raw_data,yr_renovated.nuevo!="quitar")
#a_raw_data$yr_renovated.nuevo=as.factor(a_raw_data$yr_renovated.nuevo)


=======
#a_raw_data=mutate(a_raw_data, yr_renovated.nuevo=ifelse(yr_renovated==0,"NoRenovado",ifelse(yr_renovated>1957,"renovado","quitar")))
#a_raw_data=filter(a_raw_data,yr_renovated.nuevo!="quitar")
#a_raw_data$yr_renovated.nuevo=as.factor(a_raw_data$yr_renovated.nuevo)


>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1
#par(mfrow = c(1,2))
#pie(summary(as.factor(a_raw_data$yr_renovated.nuevo)), labels = c("No_renovado","renovado"), main = "Distribución de 'Renovacion'")

#plot(a_raw_data$price~a_raw_data$yr_renovated.nuevo)

#a_raw_data <- dummy_cols(a_raw_data, select_columns = c("yr_renovated.nuevo"))
#a_raw_data$yr_renovated.nuevo <- NULL
#corrplot(cor(a_raw_data[,c("yr_renovated.nuevo_renovado","yr_renovated.nuevo_NoRenovado","price")]),method="square")
#cor(a_raw_data[,c("yr_renovated.nuevo_renovado","yr_renovated.nuevo_NoRenovado","price")])
```

<<<<<<< HEAD

```{r Zipcode relacion con lat y long }
zipcodepro=a_raw_data
#zipcodepro$zipcode=as.factor(zipcodepro$zipcode)
cor(zipcodepro[,c("price","zipcode","lat","long")])
```


```{r Price con bedroom y bathroom }
plot(price~bedrooms+bathrooms, data=a_raw_data)
#zipcodepro$zipcode=as.factor(zipcodepro$zipcode)
cor(a_raw_data[,c("price","bedrooms","bathrooms")])


par(mfrow = c(1,2))
boxplot(a_raw_data$bedrooms)
summary(a_raw_data$bedrooms)
hist(a_raw_data$bedrooms, breaks = 20)


boxplot(a_raw_data$bathrooms)
summary(a_raw_data$bathrooms)
hist(a_raw_data$bathrooms,breaks = 20)

plot(bedrooms~bathrooms, data=a_raw_data)
batBet=a_raw_data
batBet$bathrooms=as.numeric(batBet$bathrooms)
batBet= mutate(a_raw_data,banioosCuartos=ifelse(bathrooms>0,(bedrooms/bathrooms),0))

plot(price~banioosCuartos, data=batBet)

batBet=filter(batBet,banioosCuartos<3.18&banioosCuartos>0.3)
batBet= filter(batBet,price<1010000)
boxplot(batBet$banioosCuartos)
boxplot(batBet$price)
summary(batBet$banioosCuartos)
hist(batBet$banioosCuartos,breaks = 100)


cor(batBet[,c("price","banioosCuartos")])
```


=======
>>>>>>> ba39f1e6e10e62004e2e7794825a99e6b51c7ca1
### DE ACA EN ADELANTE HACER PRUEBAS 

```{r INICIO DE LAS PRUEBAS}
#df_aux <- a_raw_data %>% mutate(dif_sqft15 = a_raw_data$sqft_living15 - a_raw_data$sqft_living)
#corrplot(cor(select(df_aux,-c("id","date"))),type="upper", method="pie")
#corrplot(cor(select(df_aux,-c("id","date", "sqft_living15"))),type="upper", method="pie")

#df_aux <- a_raw_data %>% select(starts_with("sqft"))
#df_aux
#ABOVE + BASEMENT = LIVING

#corrplot(cor(select(a_raw_data,-c("id","date", "sqft_living", "sqft_lot", "sqft_above", "sqft_basement"))),type="upper", method="pie")

```


